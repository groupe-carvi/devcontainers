name: release

on:
  pull_request:
    types:
      - closed
    branches:
      - main
      - next
  workflow_dispatch:
  workflow_call:

jobs:
  release:
    if: github.event.pull_request.merged == true
    permissions:
      contents: write # to create release (changesets/action)
      pull-requests: write # to create pull request (changesets/action)
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-latest
            shell: bash
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      data: ${{ steps.release.outputs.data }}
      id: ${{ steps.release.outputs.id }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag }}
      semver: ${{ steps.release.outputs.semver }}
      prerelease: ${{ steps.release.outputs.prerelease }}
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Bun
        uses: groupe-carvi/setup-environment@v1
        with:
          bun: true

      - name: Install Bun Dependencies
        run: bun install

      - name: Create Release
        id: changesets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: changesets/action@v1
        with:
          version: bun x changeset version
          publish: bun x changeset publish

      - name: Get Release
        id: release
        if: ${{ steps.changesets.outputs.published == 'true' }}
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const { run } = await import("${{ github.workspace }}/.github/scripts/release.mjs");
                      
            await run(${{ steps.changesets.outputs.publishedPackages }}, { core, context, github })

  publish:
    name: Publish
    needs: [release]
    if: needs.release.outputs.published == 'true'
    permissions:
      contents: write # to create release (changesets/action)
      pull-requests: write # to create pull request (changesets/action)
    uses: ./.github/workflows/publish.yml
    secrets: inherit

  docs:
    name: Generate Docs
    needs: [release, publish]
    permissions:
      contents: write # to create release (changesets/action)
      pull-requests: write # to create pull request (changesets/action)
    if: needs.release.outputs.published == 'true'
    uses: ./.github/workflows/docs.yml
    secrets: inherit
